Q: Is one sorting algorithm always faster than another?
A: No, it is not.

Q: Above we said that BubbleSort, WipingBubbleSort, and InsertionSort each had the same Theta(N^2) asymptotic time complexity. How can you explain the differences in the plots for these three algorithms?
A: It seems that BubbleSort algorithm has a sharper upwarding curve, while WipingBubbleSort has a less sharp one, and InsertionSort has the least sharp one among the three. However, the worst case seems to be of the same time complexity for these three.

Q: What information can we gain from empirical analysis of algorithms which might not be as noticeable in asymptotical bounds?
A: We can see the time complexity for different algorithm under different conditions, and thus find the best method under that condition. In asymptotical bounds, it is easy to find the time complexity for the worst case, but that is not specifically true for all cases.

Q: For any given sorting algorithm, does increasing the array size always mean the sorting takes longer?
A: Not really. It really depends on the current order of the array sometime. Along with that, the JavaSort and CountingSort algorithms take basically the same time no matter how large the array size is.

Q: How does changing nrepeats change the plot?
A: It generally make the curves smoother.

Q: Is your plot the exact same as your partner's plot, even with the same values of ntrials, by, and nrepeats?
A: No, it is not.

Q: Optional: Look at the source code for BubbleSorter to WipingBubbleSorter. After looking at the plots, can you intuitively explain why WipingBubbleSorter is usually 2x as fast as BubbleSorter? (Hint: Consider the immobility of some elements when the swapping passes are single directional (i.e. only going forward), and how this "Wiping" strategy helps deal with that issue.) Can you come up with an example that shows the difference in runtime?
A: Because when you have done BubbleSorter once, the next thing you want to do is no longer putting big numbers backward, but putting small numbers forward. However, since BubbleSorter is just one direction (backward), it would be slower than WipingBubbleSorter, which will do the forward one.